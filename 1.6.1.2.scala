def step(n: Int, k: Int): Double = (((scala.math.pow(-1, k).toDouble)/(2*k+1))) * scala.math.pow(n, -2*k-1)

(0 to 11).map(klimit => 4*(4*((0 to klimit).map(k => step(5, k)).sum) -  (0 to klimit).map(k => step(239, k)).sum)
// Vector(3.18326359832636, 3.1405970293260603, 3.1416210293250346, 3.1415917721821773, 3.1415926824043994, 3.1415926526153086, 3.141592653623555, 3.1415926535886025, 3.141592653589836, 3.1415926535897922, 3.141592653589794, 3.141592653589794)

4*(4*((0 to 9).map(k => step(5, k)).sum) -  (0 to 9).map(k => step(239, k)).sum)
// 3.1415926535897922

4*(4*((0 to 10).map(k => step(5, k)).sum) -  (0 to 10).map(k => step(239, k)).sum)
// 3.141592653589794

4*(4*((0 to 11).map(k => step(5, k)).sum) -  (0 to 11).map(k => step(239, k)).sum)
// 3.141592653589794
